// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id          Int       @id @default(autoincrement())
  firstName   String?    
  lastName    String?
  username    String    @unique
  email       String    @unique
  password    String    
  createdAt   DateTime  @default(now())
  exercises   Exercise[]
  eTemplates  ExerciseTemplate[]
  workouts    Workout[]
}

model Workout {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  account     Account   @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountId   Int
  name        String    @unique
  color       String?
  exercises   ExerciseTemplate[]
}

model ExerciseTemplate {
  id          Int       @id @default(autoincrement())
  name        String    
  createdAt   DateTime  @default(now())
  account     Account   @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountId   Int
  workouts    Workout[]
  muscles     Muscle[] 
  exercises   Exercise[]
  targetSets  Int
  targetReps  Int
  type        RepType   @default(lbs)
}

model Exercise {
  id          Int       @id @default(autoincrement())
  account     Account   @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountId   Int
  exerciseT   ExerciseTemplate  @relation(fields: [exerciseTId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  exerciseTId Int
  sets        Set[]
  createdAt   DateTime  @default(now()) 
}

model Muscle {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  createdAt   DateTime  @default(now())
  exercises   ExerciseTemplate[]
}

model Set {
  id          Int       @id @default(autoincrement())
  exercise    Exercise  @relation(fields: [exerciseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  exerciseId  Int 
  weight      Int
  quantity    Int       
  createdAt   DateTime  @default(now())      
}

enum RepType {
  lbs
  seconds
  bodyWeight
}